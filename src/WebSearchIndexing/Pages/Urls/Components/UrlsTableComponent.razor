@inherits WebSearchIndexing.Pages.Components.ComponentBase

<div class="@Class" style="@Style">
    <div class="links__actions">
        <MudButton Style="text-transform: none"
                   Color="Color.Success"
                   StartIcon="@Icons.Material.Filled.Add"
                   OnClick="ShowLoadLinksDialog">
            Add links
        </MudButton>

        <MudButton Style="text-transform: none"
                   Disabled="!_filteredUrls.Any()"
                   StartIcon="@Icons.Material.Filled.DoneAll"
                   OnClick="SelectAllLinks">
            Select all
        </MudButton>

        <MudButton Style="text-transform: none"
                   Disabled="SelectedUrls.Any() is false"
                   Color="Color.Error"
                   StartIcon="@Icons.Material.Filled.Delete"
                   IconColor="@(SelectedUrls.Any() is false ? Color.Surface : Color.Error)"
                   OnClick="DeleteSelectedLinks">
            Delete
        </MudButton>

        <MudButton Style="text-transform: none"
                   Disabled="!_allUrls.Any()"
                   Color="Color.Info"
                   StartIcon="@(_isHideCompleted ? Icons.Material.Filled.RemoveRedEye : Icons.Material.Outlined.RemoveRedEye)"
                   IconColor="Color.Info"
                   OnClick="ShowOrHideCompletedLinks">
            @(_isHideCompleted ? "Show" : "Hide") completed
        </MudButton>
    </div>

    <MudDivider Style="background: var(--mud-palette-divider);height: 1px" />

    <div class="table__content">
        @if (_allUrls.Count == 0 && _currentPage == 1 && !_isLoadingUrls)
        {
            <div class="pa-3">
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled" NoIcon="true">
                    <MudText Typo="Typo.body2">Urls not found</MudText>
                </MudAlert>
            </div>
        }
        else
        {
            <MudTable Class="links__table"
                      T="UrlRequestChecked"
                      Items="_filteredUrls"
                      RowsPerPage="30"
                      OnRowClick="OnRowClick"
                      LoadingProgressColor="Color.Primary"
                      Loading="_isLoadingUrls"
                      Hover="true"
                      Striped="true"
                      HorizontalScrollbar="true"
                      FixedHeader="true"
                      Height="600px"
                      Elevation="0"
                      Bordered="false">
                <HeaderContent>
                    <MudTh />
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<UrlRequestChecked, object>(x=> _isEditMode ? string.Empty : x.UrlRequest.Url)">
                            <MudText Style="font-weight: 500" Color="Color.Surface"
                                     Typo="Typo.subtitle2">
                                Url
                            </MudText>
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<UrlRequestChecked, object>(x=> _isEditMode ? string.Empty : x.UrlRequest.Status)">
                            <MudText Style="font-weight: 500" Color="Color.Surface"
                                     Typo="Typo.subtitle2">
                                Status
                            </MudText>
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<UrlRequestChecked, object>(x => _isEditMode ? string.Empty : x.UrlRequest.Priority)">
                            <MudText Style="font-weight: 500" Color="Color.Surface"
                                     Typo="Typo.subtitle2">
                                Priotiry
                            </MudText>
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<UrlRequestChecked, object>(x =>  _isEditMode ? string.Empty : x.UrlRequest.AddedAt)">
                            <MudText Style="font-weight: 500" Color="Color.Surface"
                                     Typo="Typo.subtitle2">
                                Added at
                            </MudText>
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<UrlRequestChecked, object>(x=> _isEditMode ? string.Empty : x.UrlRequest.ProcessedAt)">
                            <MudText Style="font-weight: 500" Color="Color.Surface"
                                     Typo="Typo.subtitle2">
                                Processed at
                            </MudText>
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh />
                </HeaderContent>

                <RowTemplate>
                    <MudTd DataLabel="Checked">
                        <MudCheckBox @bind-Value="context.Checked" />
                    </MudTd>
                    <MudTd DataLabel="Url">
                        @if (context.Edited)
                        {
                            <MudTextField T="string" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="context.UrlRequest.Url" />
                        }
                        else
                        {
                            <MudStack Row="true" AlignItems="AlignItems.Center">
                                <MudText Typo="Typo.body2">@context.UrlRequest.Url</MudText>

                                <MudLink Href="@context.UrlRequest.Url" Target="_blank" Underline="Underline.None">
                                    <MudIcon Icon="@Icons.Material.Filled.Link" Color="Color.Info" />
                                </MudLink>
                            </MudStack>
                        }
                    </MudTd>
                    <MudTd DataLabel="Status">
                        <MudChip Color="@(context.UrlRequest.Status switch
                                 {
                                     UrlRequestStatus.Pending => Color.Info,
                                     UrlRequestStatus.Completed => Color.Success,
                                     UrlRequestStatus.Failed => Color.Error,
                                     _ => Color.Primary
                                 })"
                                 Variant="Variant.Text"
                                 Label="true">
                            @context.UrlRequest.Status
                        </MudChip>
                    </MudTd>
                    <MudTd DataLabel="Priotiry">
                        @if (context.Edited)
                        {
                            <MudSelect Style="width: 50px"
                                       T="UrlRequstPriority"
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       Immediate="true"
                                       AnchorOrigin="Origin.BottomCenter"
                                       @bind-Value="context.UrlRequest.Priority">
                                <MudSelectItem Value="UrlRequstPriority.Low">Low</MudSelectItem>

                                <MudSelectItem Value="UrlRequstPriority.Medium">Medium</MudSelectItem>

                                <MudSelectItem Value="UrlRequstPriority.High">High</MudSelectItem>
                            </MudSelect>
                        }
                        else
                        {
                            <MudChip Color="@(context.UrlRequest.Priority switch
                                     {
                                         UrlRequstPriority.Low => Color.Surface,
                                         UrlRequstPriority.Medium => Color.Warning,
                                         UrlRequstPriority.High => Color.Error,
                                         _ => Color.Primary
                                     })">
                                @context.UrlRequest.Priority
                            </MudChip>
                        }
                    </MudTd>
                    <MudTd DataLabel="Added at">@context.UrlRequest.AddedAt.ToString("MMM dd, hh:mm:ss tt")</MudTd>
                    <MudTd DataLabel="Processed at">@(context.UrlRequest.ServiceAccount is null ? "Not processed" : context.UrlRequest.ProcessedAt.ToString("MMM dd, hh:mm:ss tt"))</MudTd>
                    <MudTd>
                        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexEnd">
                            @if (context.Edited)
                            {
                                <MudIconButton Style="height: fit-content"
                                               Icon="@Icons.Material.Filled.Save"
                                               Variant="Variant.Filled"
                                               Color="Color.Success"
                                               OnClick="() => ItemHasBeenCommitted(context)" />

                                <MudIconButton Icon="@Icons.Material.Filled.Cancel"
                                               Color="Color.Surface"
                                               OnClick="() => ResetItemToOriginalValue(context)" />
                            }
                            else
                            {
                                <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" OnClick="() => BackupItem(context)" />
                            }
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="() => RemoveItem(context)" />
                        </MudStack>
                    </MudTd>
                </RowTemplate>

                <PagerContent>
                    @if (_totalPages > 1)
                    {
                        <MudDivider Style="background: var(--mud-palette-divider);height: 1px" />

                        <MudPagination Class="pa-4"
                                       Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       Rectangular="true"
                                       DisableElevation="true"
                                       Count="_totalPages"
                                       Selected="_currentPage"
                                       SelectedChanged="ChangePage" />
                    }
                </PagerContent>
            </MudTable>
        }
    </div>
</div>